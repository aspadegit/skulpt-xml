<skulptGenerator><file>axel</file><project>drawing robot</project><functions><function><skulpt>move_up</skulpt><severus>axel.moveYBy</severus><parameters><parameter><name>dist</name><paramType>(Number)</paramType><paramDescription>How far Axel should move up by</paramDescription></parameter></parameters><type>Promise</type><description>Moves Axel up by a given distance</description><exampleParameters><exampleParameter>100</exampleParameter></exampleParameters></function><function><skulpt>move_down</skulpt><severus>axel.moveYBy</severus><parameters><parameter><name>dist</name><paramType>(Number)</paramType><paramDescription>How far Axel should move down by</paramDescription></parameter></parameters><type>Promise</type><description>Moves Axel down by a given distance.</description><exampleParameters><exampleParameter>100</exampleParameter></exampleParameters></function><function><skulpt>move_left</skulpt><severus>axel.moveXBy</severus><parameters><parameter><name>dist</name><paramType>(Number)</paramType><paramDescription>How far Axel should move left by</paramDescription></parameter></parameters><type>Promise</type><description>Moves Axel left by a given distance</description><exampleParameters><exampleParameter>100</exampleParameter></exampleParameters></function><function><skulpt>move_right</skulpt><severus>axel.moveXBy</severus><parameters><parameter><name>dist</name><paramType>(Number)</paramType><paramDescription>How far Axel should move right by</paramDescription></parameter></parameters><type>Promise</type><description>Moves Axel right by a given distance.</description><exampleParameters><exampleParameter>100</exampleParameter></exampleParameters></function><function><skulpt>move_to_coordinate</skulpt><severus>axel.moveTo</severus><parameters><parameter><name>x</name><paramType>(Number)</paramType><paramDescription>The coordinate Axel will move to on the X axis.&lt;br&gt;</paramDescription></parameter><parameter><name>y</name><paramType>(Number)</paramType><paramDescription>The coordinate Axel will move to on the Y axis.</paramDescription></parameter></parameters><type>Promise</type><description>Moves Axel from the current position to the coordinates passed to the function</description><exampleParameters><exampleParameter>512</exampleParameter><exampleParameter>512</exampleParameter></exampleParameters></function><function><skulpt>set_pen_opacity</skulpt><severus>axel.setPenOpacity</severus><parameters><parameter><name>opacity</name><paramType>(Number)</paramType><paramDescription>The percentage of how opaque the pen will be. Between 0 and 100.</paramDescription></parameter></parameters><type>Promise</type><description>Sets how opaque the pen should be when drawing.</description><exampleParameters><exampleParameter>50</exampleParameter></exampleParameters></function><function><skulpt>set_pen_size</skulpt><severus>axel.setPenSize</severus><parameters><parameter><name>size</name><paramType>(Number)</paramType><paramDescription>The size of the pen.</paramDescription></parameter></parameters><type>Promise</type><description>Changes the size of Axel's pen.</description><exampleParameters><exampleParameter>15</exampleParameter></exampleParameters></function><function><skulpt>set_pen_color</skulpt><severus>axel.setPenColor</severus><parameters><parameter><name>r</name><paramType>(Number)</paramType><paramDescription>Between 0-255, sets the intensity of the red part of the color.&lt;br&gt;</paramDescription></parameter><parameter><name>g</name><paramType>(Number)</paramType><paramDescription>Between 0-255, sets the intensity of the green part of the color.&lt;br&gt;</paramDescription></parameter><parameter><name>b</name><paramType>(Number)</paramType><paramDescription>Between 0-255, sets the intensity of the blue part of the color.</paramDescription></parameter></parameters><type>Promise</type><description>Sets the color of Axel's pen to be the given RBG value</description><exampleParameters><exampleParameter>0</exampleParameter><exampleParameter>255</exampleParameter><exampleParameter>0</exampleParameter></exampleParameters></function><function><skulpt>set_pen_type</skulpt><severus>axel.setPenType</severus><parameters><parameter><name>type</name><paramType>(String)</paramType><paramDescription>Changes the pen style of Axel's pen. Options are "normal" / "spray paint"</paramDescription></parameter></parameters><type>Promise</type><description>Changes Axel's pen type to the given parameter</description><exampleParameters><exampleParameter>"spray paint"</exampleParameter></exampleParameters></function><function><skulpt>place_sticker</skulpt><severus>axel.placeSticker</severus><parameters><parameter><name>sticker</name><paramType>(String)</paramType><paramDescription> The sticker to be placed. Options are:&lt;br&gt;
- "Alli Confused", &lt;br&gt;
- "Alli Explaining", &lt;br&gt;
- "Alli Happy", &lt;br&gt;
- "Alli Neutral", &lt;br&gt;
- "Axel Confused", &lt;br&gt;
- "Axel Explaining", &lt;br&gt;
- "Axel Happy", &lt;br&gt;
- "Axel Neutral", &lt;br&gt;
- "Trip Confused", &lt;br&gt;
- "Trip Explaining", &lt;br&gt;
- "Trip Happy", &lt;br&gt;
- "Trip Neutral".&lt;br&gt;</paramDescription></parameter><parameter><name>rotation</name><paramType>(Number)</paramType><paramDescription>How much the sticker should be rotated, positive numbers are to the right, negative numbers are to the left&lt;br&gt;</paramDescription></parameter><parameter><name>scale</name><paramType>(Number)</paramType><paramDescription>How big the sticker should be</paramDescription></parameter></parameters><type>Promise</type><description>Places a sticker where axel is positioned using the given sticker, rotation and scale passed to the function</description><exampleParameters><exampleParameter>"Axel Happy"</exampleParameter><exampleParameter>180</exampleParameter><exampleParameter>2</exampleParameter></exampleParameters></function><function><skulpt>can_draw</skulpt><severus>axel.draw</severus><parameters><parameter><name>bool</name><paramType>(Boolean)</paramType><paramDescription>Whether or not axel can draw</paramDescription></parameter></parameters><type>Promise</type><description>Allows the user to start or stop axel from drawing on the whiteboard</description><exampleParameters><exampleParameter>true</exampleParameter></exampleParameters></function><function><skulpt>clear</skulpt><severus>axel.clear</severus><parameters/><type>Promise</type><description>Clears the entire whiteboard of any drawings or stickers</description><exampleParameters/></function><function><skulpt>get_coordinate</skulpt><severus>axel.map</severus><parameters><parameter><name>coord</name><paramType>(String)</paramType><paramDescription>Either "x" or "y". Chooses which coordinate of Axel's position to return</paramDescription></parameter></parameters><type>Return</type><description>Returns either Axel's X or Y coordinate on the whiteboard</description><exampleParameters><exampleParameter>"x"</exampleParameter></exampleParameters></function></functions></skulptGenerator>