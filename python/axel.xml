<skulptGenerator><file>axel</file><project>python</project><functions><function><skulpt>move</skulpt><severus>axel.moveForwardBackward</severus><parameters><parameter><name>distance</name><paramType>(Integer)</paramType><paramDescription>Distance axel will travel, Default value is 1.</paramDescription></parameter></parameters><type>Promise</type><description>Action function. Axel will move forward or backward the given distance.</description><exampleParameters><exampleParameter>3</exampleParameter></exampleParameters></function><function><skulpt>turn</skulpt><severus>axel.turnLeftRight</severus><parameters><parameter><name>direction</name><paramType>(String)</paramType><paramDescription>Direction axel will turn towards, Default value is "right".</paramDescription></parameter></parameters><type>Promise</type><description>Action function. Axel will turn to direction. Values of direction limited to "left", "right", and "around".</description><exampleParameters><exampleParameter>"left"</exampleParameter></exampleParameters></function><function><skulpt>say</skulpt><severus>axel.say</severus><parameters><parameter><name>phrase</name><paramType>(String)</paramType><paramDescription>Input that axel will say, must be wrapped in "quotes"</paramDescription></parameter></parameters><type>Promise</type><description>Action function. Axel will say phrase if it is part of their known dictionary of phrases or is a number. Otherwise Axel will return a buzzer sound. This can also be used to issue commands to Byte, or the Spaceship.</description><exampleParameters><exampleParameter>"hello world"</exampleParameter></exampleParameters></function><function><skulpt>get_magnetometer_value</skulpt><severus>axel.magnetometer</severus><parameters/><type>Return</type><description>Sensor function. Returns the magnetic signal level (flux) of the square directly in front of Axel. Values greater than or equal to 1 signal the presence of Byte's magnetic signal. Values less than 1 signal no presence of Byte's magnetic signal.</description><exampleParameters/></function><function><skulpt>scan_qr</skulpt><severus>axel.scannerArmAnimation</severus><parameters/><type>Promise</type><description>Sensor function. Axel will scan a sample jar or broken beacon when both beside and facing it. A unique identifier will be returned such as a serial number, QR code, or name.</description><exampleParameters/></function><function><skulpt>scan</skulpt><severus>axel.scannerArmAnimation</severus><parameters/><type>Promise</type><description>Sensor function. Axel will scan specific objects in the square in front or above axel. This method will return additional information about the object such as the number of colonies in a petri dish.</description><exampleParameters/></function><function><skulpt>pick_up</skulpt><severus>axel.pickUp</severus><parameters/><type>Promise</type><description>Action function. Axel will pick up an object if the object is in the square directly in front of them. This item will be stored in Axel’s backpack. These objects include petri dishes and sample jars. Axel can only hold one item at a time.</description><exampleParameters/></function><function><skulpt>get_forward_sensor_object</skulpt><severus>axel.getForwardObject</severus><parameters/><type>Return</type><description>Sensor function. Returns the type of the nearest object in front of Axel’s current position</description><exampleParameters/></function><function><skulpt>drop</skulpt><severus>axel.drop</severus><parameters/><type>Promise</type><description>Action function. Axel will drop the contents of what is in their backpack into the square directly in front of them. This is commonly used to deposit items into chutes.</description><exampleParameters/></function><function><skulpt>at_byte</skulpt><severus>axel.atByte</severus><parameters/><type>Return</type><description>Sensor function. Detects if Axel is beside Byte. Returns True if Axel is in the space directly beside and facing Byte, otherwise returns False.</description><exampleParameters/></function><function><skulpt>distance_to_obstacle</skulpt><severus>axel.disToObstacle</severus><parameters><parameter><name>direction</name><paramType>(String)</paramType><paramDescription>Direction axel will detect obstacles in, Default value is "forward".</paramDescription></parameter></parameters><type>Return</type><description>Sensor function. Returns the distance to the nearest obstacle relative to Axel’s current position in the direction specified.</description><exampleParameters><exampleParameter></exampleParameter></exampleParameters></function><function><skulpt>swap_arm</skulpt><severus>axel.swapArm</severus><parameters><parameter><name>arm_type</name><paramType>(String)</paramType><paramDescription>Specified arm Axel will swap to.</paramDescription></parameter></parameters><type>Return</type><description>Action function. Axel swaps current arm with the arm specified by arm_type. These arms offer Axel different functionality. Axel has the following arms available:
“Claw”,
“Scanner”,
“Laser”,
“Saw”.</description><exampleParameters><exampleParameter>"laser"</exampleParameter></exampleParameters></function><function><skulpt>identify</skulpt><severus>axel.scannerArmAnimation</severus><parameters/><type>Promise</type><description>Sensor function. Returns the type/species of a sample. Axel must be beside and directly facing the sample.</description><exampleParameters/></function><function><skulpt>collect</skulpt><severus>axel.collectSample</severus><parameters/><type>Promise</type><description>Action function. Axel will pick up and collect a creature sample. Axel must be beside and directly facing the sample.</description><exampleParameters/></function></functions></skulptGenerator>